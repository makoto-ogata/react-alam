{"version":3,"sources":["sound/piano-without-melody-short-loop-60-bpm.mp3","components/Alarm.js","App.js","index.js"],"names":["Content","styled","div","Message","h2","DefaultText","p","TimeText","SetTime","input","ButtonArea","SetButton","button","Alarm","props","nowTime","time","handleTime","handleAdd","stopSound","alarmTime","dateMessage","text","type","value","onChange","onClick","alarmSound","Audio","sound","loop","images","Main","main","App","useState","Date","showTime","setShowTime","setTime","setAlarmTime","useEffect","timer","setInterval","clearInterval","toLocaleTimeString","hour","minute","nowTimeHour","nowTimeHourNumber","parseFloat","play","style","backgroundImage","e","target","pause","currentTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,MAA0B,mE,cCoBnCA,EAAUC,IAAOC,IAAV,oJASPC,EAAUF,IAAOG,GAAV,gFAKPC,EAAcJ,IAAOK,EAAV,qGAMXC,EAAWN,IAAOK,EAAV,qGAMRE,EAAUP,IAAOQ,MAAV,mFAMPC,EAAaT,IAAOC,IAAV,6GAOVS,EAAYV,IAAOW,OAAV,8GAMAC,EA/DF,SAACC,GAAU,IACfC,EAA0ED,EAA1EC,QAAQC,EAAkEF,EAAlEE,KAAMC,EAA4DH,EAA5DG,WAAYC,EAAgDJ,EAAhDI,UAAWC,EAAqCL,EAArCK,UAAWC,EAA0BN,EAA1BM,UAAWC,EAAeP,EAAfO,YAClE,OACI,eAACrB,EAAD,WACE,cAACG,EAAD,UAAUkB,EAAYC,OACtB,cAACjB,EAAD,kCACA,cAACE,EAAD,UAAWQ,IACX,cAACV,EAAD,oCACA,cAACG,EAAD,CAASe,KAAK,OAAOC,MAAOR,EAAMS,SAAUR,IAC5C,eAACP,EAAD,WACE,cAACC,EAAD,CAAWY,KAAK,SAASG,QAASR,EAAlC,sBACA,cAACP,EAAD,CAAWY,KAAK,SAASG,QAASP,EAAlC,0BAEF,cAACZ,EAAD,UAAWa,QCTbO,G,MAAa,IAAIC,MAAMC,IAC7BF,EAAWG,MAAO,EAElB,IAAIT,EAAc,CAChBU,OAAQ,GACRT,KAAM,IA6DFU,EAAO/B,IAAOgC,KAAV,yFAKKC,EA/DJ,WAAM,IAAD,EACkBC,mBAAS,IAAIC,MAD/B,mBACPC,EADO,KACGC,EADH,OAEUH,mBAAS,IAFnB,mBAEPnB,EAFO,KAEDuB,EAFC,OAIoBJ,mBAAS,IAJ7B,mBAIPf,EAJO,KAIIoB,EAJJ,KAedC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBL,EAAY,IAAIF,QACf,KACH,OAAO,kBAAKQ,cAAcF,MACzB,IAEH,IAAM3B,EAAUsB,EAASQ,mBAAmB,GAAG,CAACC,KAAM,UAAWC,OAAO,YAClEC,EAAcX,EAASQ,mBAAmB,GAAG,CAACC,KAAM,YACpDG,EAAoBC,WAAWF,GA2BrC,OAzBAP,qBAAU,WACN1B,IAAYK,GACbO,EAAWwB,SAEX,CAACpC,IAEJ0B,qBAAU,WAENpB,EADC4B,EAAoB,IAAMA,EAAoB,EACjC,CACZlB,OAAQ,0CACRT,KAAM,gBAED2B,EAAoB,GAAKA,EAAoB,GACtC,CACZlB,OAAQ,0CACRT,KAAM,gBAGM,CACZS,OAAQ,0CACRT,KAAM,oBAGT,CAAC2B,IAGF,cAACjB,EAAD,CAAMoB,MAAO,CAACC,gBAAgB,OAAD,OAAShC,EAAYU,OAArB,MAA7B,SACE,cAAC,EAAD,CAAOV,YAAaA,EAAaN,QAASA,EAASC,KAAMA,EAAMC,WAlDjD,SAACqC,GAAD,OAAMf,EAAQe,EAAEC,OAAO/B,QAkDkDN,UAhD1E,WAEfsB,EADiBxB,IA+C8FG,UA3ChG,WACfQ,EAAW6B,QACX7B,EAAW8B,YAAc,GAyC4GrC,UAAWA,OC/DpJsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b46ee26e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/piano-without-melody-short-loop-60-bpm.4eef14ed.mp3\";","import styled from 'styled-components';\n\nconst Alarm =(props)=> {\n  const {nowTime,time, handleTime, handleAdd, stopSound, alarmTime, dateMessage} = props;\n  return(\n      <Content>\n        <Message>{dateMessage.text}</Message>\n        <DefaultText>The current time is</DefaultText>\n        <TimeText>{nowTime}</TimeText>\n        <DefaultText>Please, set the alarm</DefaultText>\n        <SetTime type=\"time\" value={time} onChange={handleTime} />\n        <ButtonArea>\n          <SetButton type=\"submit\" onClick={handleAdd}>SetAlarm</SetButton>\n          <SetButton type=\"submit\" onClick={stopSound}>StopAlarm</SetButton>\n        </ButtonArea>\n        <TimeText>{alarmTime}</TimeText>\n      </Content>\n  )\n}\n\nconst Content = styled.div`\n  display: block;\n  max-width: 800px;\n  margin: 0 auto;\n  color: #fff;\n  padding-top: 30px;\n  text-align: center;\n`\n\nconst Message = styled.h2`\n  font-size: 45px;\n  text-shadow: 1px 0 2px #333;\n`\n\nconst DefaultText = styled.p`\n  margin-top: 20px;\n  font-size: 20px;\n  text-shadow: 1px 0 2px #333;\n`\n\nconst TimeText = styled.p`\n  font-size: 30px;\n  margin-top: 30px;\n  text-shadow: 1px 0 2px #333;\n`\n\nconst SetTime = styled.input`\n  border: none;\n  padding: 5px;\n  margin-top: 20px;\n`\n\nconst ButtonArea = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n`\n\nconst SetButton = styled.button`\n  border: none;\n  font-size: 18px;\n  border-radius: 5px;\n  padding: 5px 10px;\n`\nexport default Alarm;","import React, { useState, useEffect } from 'react';\nimport sound from './sound/piano-without-melody-short-loop-60-bpm.mp3';\nimport Alarm from './components/Alarm';\nimport styled from 'styled-components';\nimport './App.css';\n\nconst alarmSound = new Audio(sound);\nalarmSound.loop = true;\n\nlet dateMessage = {\n  images: '',\n  text: ''\n}\n\nconst App =()=> {\n  const [showTime, setShowTime] = useState(new Date());\n  const [time, setTime] = useState('');\n  const handleTime =(e)=> setTime(e.target.value);\n  const [alarmTime, setAlarmTime] = useState('');\n  const handleAdd =()=> {\n    const newAlarm = time;\n    setAlarmTime(newAlarm);\n  }\n\n  const stopSound =()=> {\n    alarmSound.pause();\n    alarmSound.currentTime = 0;\n  }\n\n  useEffect(() => {\n    const timer = setInterval(()=> {\n      setShowTime(new Date());\n    }, 1000);\n    return ()=> clearInterval(timer);\n  }, []);\n\n  const nowTime = showTime.toLocaleTimeString([],{hour: 'numeric', minute:'numeric'});\n  const nowTimeHour = showTime.toLocaleTimeString([],{hour: 'numeric'});\n  const nowTimeHourNumber = parseFloat(nowTimeHour);\n\n  useEffect(()=>{\n   if(nowTime === alarmTime){\n     alarmSound.play();\n   }\n  }, [nowTime]);\n\n  useEffect(()=>{\n    if(nowTimeHourNumber > 18 || nowTimeHourNumber < 6) {\n      dateMessage = {\n        images: 'https://source.unsplash.com/VZxNq9GytpQ',\n        text: 'Good Evening'\n      }\n    }else if(nowTimeHourNumber > 6 || nowTimeHourNumber < 12){\n      dateMessage = {\n        images: 'https://source.unsplash.com/-G3rw6Y02D0',\n        text: 'Good Morning'\n      }\n    } else {\n      dateMessage = {\n        images: 'https://source.unsplash.com/8GVuQUmZW8Y',\n        text: 'Good Afternoon'\n      }\n    }\n  }, [nowTimeHourNumber]);\n\n  return (\n    <Main style={{backgroundImage: `url(${dateMessage.images})`}}>\n      <Alarm dateMessage={dateMessage} nowTime={nowTime} time={time} handleTime={handleTime} handleAdd={handleAdd} stopSound={stopSound} alarmTime={alarmTime} />\n    </Main>\n  );\n}\n\nconst Main = styled.main`\n  height: 100vh;\n  width: 100%;\n  background-size: cover;\n`\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}